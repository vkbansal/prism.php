tools:
    php_sim: true
    php_pdepend:
        enabled: true
        configuration_file: null
        suffixes:
            - php
        excluded_dirs: {  }
        filter:
            excluded_paths:
                - 'docs/*'
                - 'test/*'
            paths: {  }
    php_analyzer:
        enabled: true
        extensions:
            - php
        dependency_paths: {  }
        filter:
            excluded_paths:
                - 'docs/*'
                - 'test/*'
            paths: {  }
        path_configs: {  }
    external_code_coverage:
        enabled: true
        timeout: 300
        runs: 1
        filter:
            excluded_paths:
                - 'docs/*'
                - 'test/*'
            paths: {  }
    php_mess_detector:
        enabled: true
        extensions:
            - php
        filter:
            excluded_paths:
                - 'docs/*'
                - 'test/*'
            paths: {  }
        config:
            ruleset: null
            code_size_rules:
                cyclomatic_complexity: false
                npath_complexity: false
                excessive_method_length: true
                excessive_class_length: false
                excessive_parameter_list: false
                excessive_public_count: false
                too_many_fields: false
                too_many_methods: false
                excessive_class_complexity: false
            design_rules:
                exit_expression: true
                eval_expression: true
                goto_statement: true
                number_of_class_children: false
                depth_of_inheritance: false
                coupling_between_objects: false
            unused_code_rules:
                unused_private_field: true
                unused_local_variable: true
                unused_private_method: true
                unused_formal_parameter: true
            naming_rules:
                constructor_conflict: true
                constant_naming: true
                boolean_method_name: false
            controversial_rules:
                superglobals: false
                camel_case_class_name: true
                camel_case_property_name: false
                camel_case_method_name: true
                camel_case_parameter_name: false
                camel_case_variable_name: false
        path_configs: {  }
    php_code_sniffer:
        enabled: true
        extensions:
            - php
        filter:
            excluded_paths:
                - 'docs/*'
                - 'test/*'
            paths: {  }
        config:
            tab_width: 0
            encoding: utf8
            standard: "PSR2"
        path_configs: {  }
    sensiolabs_security_checker:
        enabled: true
        filter:
            excluded_paths:
                - 'docs/*'
                - 'test/*'
            paths: {  }
    php_loc:
        enabled: true
        excluded_dirs:
            - vendor
            - test
            - spec
    php_cpd:
        enabled: true
        excluded_dirs:
            - vendor
            - test
            - spec
        names:
            - '*.php'
        min_lines: 5
        min_tokens: 70
        filter:
            excluded_paths:
                - 'docs/*'
                - 'test/*'
            paths: {  }
    php_changetracking:
        enabled: true
        bug_patterns:
            - '\bfix(?:es|ed)?\b'
        feature_patterns:
            - '\badd(?:s|ed)?\b'
            - '\bimplement(?:s|ed)?\b'
        filter:
            excluded_paths:
                - 'docs/*'
                - 'test/*'
            paths: {  }
filter:
    excluded_paths:
        - 'docs/*'
        - 'test/*'
        - 'vendor/*'
    paths: {  }

build_failure_conditions: {  }

application:
    type: none

coding_style:
    php:
        indentation:
            general:
                use_tabs: false
                size: 4
            switch:
                indent_case: true
        spaces:
            before_parentheses:
                function_declaration: false
                closure_definition: false
                function_call: false
                if: true
                for: true
                while: true
                switch: true
                catch: true
                array_initializer: false
            around_operators:
                assignment: true
                logical: true
                equality: true
                relational: true
                bitwise: true
                additive: true
                multiplicative: true
                shift: true
                unary_additive: false
                concatenation: false
                negation: false
            before_left_brace:
                class: true
                function: true
                if: true
                else: true
                for: true
                while: true
                do: true
                switch: true
                try: true
                catch: true
                finally: true
            before_keywords:
                else: true
                while: true
                catch: true
                finally: true
            within:
                brackets: false
                array_initializer: false
                grouping: false
                function_call: false
                function_declaration: false
                if: false
                for: false
                while: false
                switch: false
                catch: false
                type_cast: false
            ternary_operator:
                before_condition: true
                after_condition: true
                before_alternative: true
                after_alternative: true
                in_short_version: false
            other:
                before_comma: false
                after_comma: true
                before_semicolon: false
                after_semicolon: true
                after_type_cast: true
        braces:
            classes_functions:
                class: end-of-line
                function: end-of-line
                closure: end-of-line
            if:
                opening: end-of-line
                always: true
                else_on_new_line: false
            for:
                opening: end-of-line
                always: true
            while:
                opening: end-of-line
                always: true
            do_while:
                opening: end-of-line
                always: true
                while_on_new_line: false
            switch:
                opening: end-of-line
            try:
                opening: end-of-line
                catch_on_new_line: false
                finally_on_new_line: false

